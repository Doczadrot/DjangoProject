"""
–ú–æ–¥–µ–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è - –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö üìä

–î–ª—è –Ω–æ–≤–∏—á–∫–æ–≤:
–≠—Ç–æ –∫–∞–∫ —á–µ—Ä—Ç–µ–∂–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö üìê
–ö–∞–∂–¥—ã–π –∫–ª–∞—Å—Å Model - —ç—Ç–æ –æ—Ç–¥–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞
–ö–∞–∂–¥–æ–µ –ø–æ–ª–µ - –∫–æ–ª–æ–Ω–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ

–ü—Ä–∏–º–µ—Ä:
class Student(models.Model):
    name = models.CharField('–ò–º—è', max_length=100)  # –ü–æ–ª–µ –¥–ª—è –∏–º–µ–Ω–∏ (–∫–∞–∫ —è—á–µ–π–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ üìù)
    age = models.IntegerField('–í–æ–∑—Ä–∞—Å—Ç')  # –ß–∏—Å–ª–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ üî¢
"""

from django.db import models



class Student(models.Model):
    FIRST_YEAR = 'first'
    SECOND_YEAR = 'second'
    THIRD_YEAR = 'third'
    FOURTH_YEAR = 'fourth'

    YEAR_IN_SCHOOL_CHOICE = [
        (FIRST_YEAR, '–ü–µ—Ä–≤—ã–π –∫—É—Ä—Å'),
        (SECOND_YEAR, '–í—Ç–æ—Ä–æ–π –∫—É—Ä—Å'),
        (THIRD_YEAR, '–¢—Ä–µ—Ç–∏–π –∫—É—Ä—Å'),
        (FOURTH_YEAR, '–ß–µ—Ç–≤–µ—Ä—Ç—ã–π –∫—É—Ä—Å')
         ]
    first_name = models.CharField(max_length=150, verbose_name='–ò–º—è')
    last_name = models.CharField(max_length=150, verbose_name='–§–∞–º–∏–ª–∏—è')
    yers = models.CharField(max_length=6, choices=YEAR_IN_SCHOOL_CHOICE,default=FIRST_YEAR, verbose_name='–ö—É—Ä—Å')


    def __str__(self): #—Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏ —Å—Ç—Ä —Ç—É—Ç —É –Ω–∞—Å –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—Å—å—è –∏–º—è —Ñ–∞–º–∏–ª—è
        return f'{self.firs_name} {self.last_name}'
    #–∑–∞–¥–∞–Ω–∏–º –ø–æ–¥—è–æ–∫ —Å–æ—Ä—Ç–∏—Ä–≤–æ–∫–∏ –æ–ø —Ñ–∞–º–∏–ª–∏–∏
    class Meta:
        verbose_name = '–°—Ç—É–¥–µ–Ω—Ç'
        verbose_name_plural = '–°—Ç—É–¥–µ–Ω—Ç—ã'
        #–ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ - –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∫–∞–∫ —Å—Ç–æ–∫–∞
        ordering = ['last_name']




#     first_name = models.CharField(max_length=150, verbose_name="–ò–º—è")
#     last_name = models.CharField(max_length=150, verbose_name="–§–∞–º–∏–ª–∏—è")
#
#
#     #–ø–æ–ª—è –º–æ–¥–µ–ª–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
#     age = models.IntegerField(help_text = '–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞') #–¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–≥–∏—è —á–∏—Å–ª–µ
#     is_active = models.BooleanField(default=True)#—è–≤–ª—è–µ—Ç—Å—è  –∏–ª —Å—Ç—É–¥–µ–Ω—Ç –∞–∫—Ç–≤–Ω—ã–º
#     description = models.TextField (null=True, blank=True) #(–æ–ø–∏—Å–∞–Ω–∏–µ) –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã–π –¥–ª–∏–Ω—ã
#     created_ad = models.DateTimeField() #–ø—Ä–µ–¥–æ—Å—Ç–∞–ª—è–µ—Ç  –¥–∞—Ç—É  –∏ –≤–µ—Ä–º—è
#     image = models.ImageField() # –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
#     # –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∫–ª—é—á–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fotegen_key
#     group = models.ForeignKey(Group, on_delete=models.CASCADE)
#     profile = models.OneToOneField(Profile, on_delete=models.CASCADE)
#     tags = models.ManyToManyField(Tag)
#
#     STATUS_CHOICES = [('draft', 'Draft'),
#                       ('publushed', 'Published')]
#
#     status = models.CharField(max_length=10)
#
#
#
#
#
#
#     def __str__(self):
#         return f'{self.first_name} {self.last_name}'
#
#     class Meta:
#         verbose_name = "—Å—Ç—É–¥–µ–Ω—Ç"
#         verbose_name_plural = '—Å—Ç—É–¥–µ–Ω—ã'
#         ordering = ["last_name"]
#         db_table = 'custom_table_name'
# # Create your models here.
